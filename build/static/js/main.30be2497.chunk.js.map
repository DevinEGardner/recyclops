{"version":3,"sources":["components/Button.js","components/QuestionScreen.js","components/Homescreen.js","data/sampledata.js","components/sample_component.js","App.js","serviceWorker.js","index.js"],"names":["Button","props","style","onClick","ButtonText","QuestionScreen","useEffect","document","body","backgroundColor","styles","root","background","h1","Title","h2","question","buttoncontainer","responses","map","e","i","console","log","buttonProps","button","text","changePage","next","goBack","width","position","left","bottom","HomeScreen","paddingTop","paddingBottom","goHome","marginBottom","cardboard_box","isRecyclable","items","reponses","color","height","textAlign","fontSize","padding","margin","overflow","justifyContent","alignItems","display","borderRadius","test","Question","Screen","useState","ishome","activePage","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.30be2497.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Button(props){\n    return(\n        <div style={props.style} onClick={props.onClick}>\n            {props.ButtonText}\n        </div>\n    )\n}\n\nexport function IconButton(props){\n    return(\n        <div style={props.style} onClick={props.onClick}>\n            <i className={props.Icon}></i> <p>{props.ButtonText}</p>\n        </div>\n    )\n}","import React, {useEffect} from 'react';\nimport Button from './Button.js'\n\nexport default function QuestionScreen(props){\n\n    useEffect(()=>{\n        document.body.style.backgroundColor = props.styles?.root.background;\n    })\n\n    return(\n    <div style={props.styles?.root}>\n        <p style={props.styles?.root?.h1}>{props.Title ?? \"Title\"}</p>\n        <br></br>\n        <p style={props.styles?.root?.h2}>{props.body ?? props.question ?? \"Question\"}</p>\n        <div style={props.styles?.buttoncontainer}>\n        {props.responses != null ? \n            <div>\n            {props.responses.map((e,i)=>{\n                console.log(e)\n                let buttonProps = {\n                    style: props.styles?.button,\n                    ButtonText: e.text,\n                    onClick: () => {\n                        console.log(\"Hi\")\n                        console.log()\n                        props.changePage(e.next)\n                    }\n                }\n                return (<Button {...buttonProps}></Button>)\n            })}\n            </div>\n        :\n        <div>\n            Thank you!\n        </div>\n        \n    }\n\n        </div>\n\n        <Button onClick={()=>{props.goBack()}} style={ {... props.styles?.button, width:'164px', position:'absolute', left:'25px', bottom:'40px'}} ButtonText=\"Go Back\"></Button>\n    </div>\n    )\n}","import React, {useEffect} from 'react';\nimport Button from './Button.js'\n\nexport default function HomeScreen(props){\n    useEffect(()=>{\n        document.body.style.backgroundColor = props.styles?.root.background;\n    })\n    \n    return (\n        <div style={props.styles?.root}>\n            <p style={{...props.styles?.root.h1, paddingTop:'200px'}} >Recyclops</p>\n            <br></br>\n            <p style={{...props.styles?.root.h2, paddingTop:'90px', paddingBottom:'90px'}}>Ready to save the earth?</p>\n\n            <Button onClick={()=>{props.goHome(false)}} style={{... props.styles?.button, marginBottom:'50px'}} ButtonText=\"Questionaire\"></Button>\n            <Button onClick={()=>{}} style={props.styles?.button} ButtonText=\"Scan Barcode\"></Button>\n        </div>\n    )\n}","export const containers = {\n    responses: null\n}\n\nexport const cans = {\n    responses: null\n}\n\nexport const electronics = {\n    responses: null\n}\n\nexport const other = {\n    responses: null\n}\n\n// Paper\n\nexport const paper_tissue_worndamaged = {\n    isRecyclable: false,\n    body: \"This cannot usually be recycled, but check with your local recycling center to find out what their policy is before throwing it away.\"\n}\n\nexport const paper_tissue_notworndamaged = {\n    isRecyclable: true,\n    body: \"This can be reused! You should use it again before trying to throw it away or recycle it.\"\n}\n\nexport const paper_tissue = {\n    question: \"Is it worn or damaged?\",\n    reponses: \n    [\n        {text: 'Yes', next: paper_tissue_notworndamaged},\n        {text: 'No', next: paper_tissue_worndamaged}\n    ]\n}\n\nexport const paper_mail_laminatedcoated = {\n    isRecyclable: false,\n    body: \"This cannot usually be recycled, but check with your local recycling center to find out what their policy is before throwing it away.\"\n}\n\nexport const paper_mail_notlaminatedcoated = {\n    isRecyclable: true,\n    body: \"This can be recycled!\"\n}\nexport const paper_mail = {\n    question: \"Does it have foil or a laminated coating on it?\",\n    reponses: \n    [\n        {text: 'Yes', next: paper_mail_notlaminatedcoated},\n        {text: 'No', next: paper_mail_laminatedcoated}\n    ]\n}\n\nexport const paper_giftwrap_recyclable = {\n    isRecyclable: true,\n    body: \"This can be recycled!\"\n}\n\nexport const paper_giftwrap_notrecyclable = {\n    isRecyclable: false,\n    body: \"This cannot be recycled. A lot of gift wrap isnâ€™t recyclable because of the coating on the paper, which is often shiny and laminated. However, check with your local recycling provider first to be certain and for the best ways to dispose of wrapping paper.\"\n}\nexport const paper_giftwrap = {\n    question: \"Was it made from recycled content?\",\n    responses: \n    [\n        {text: 'Yes', next: paper_giftwrap_recyclable},\n        {text: 'No', next: paper_giftwrap_notrecyclable}\n    ]\n}\n\nexport const paper = {\n    isRecyclable: true,\n    body: \"Most community or office recycling programs accept paper and paper products. Check what your community or office program accepts before you put it in the bin. When you go shopping, look for products that are made from recycled paper.\",\n    responses:\n    [\n        {text: \"Tissue Paper\", next: paper_tissue},\n        {text: \"Mail\", next: paper_mail},\n        {text: \"Gift Wrap\", next: paper_giftwrap}\n    ]\n}\n// Cardboard\n\nexport const cardboard_foodcontainer_recyclable = {\n    Title:'Congratulations!',\n    isRecyclable: true,\n    body: \"This can be recycled!\\nTake it to your nearest recyling station\"\n}\n\nexport const cardboard_foodcontainer_notrecyclable = {\n    isRecyclable: false,\n    body: \"This cannot be recycled, but some paper or cardboard materials can be composted even if there is food debris on them.\"\n}\n\nexport const cardboard_foodcontainer = {\n    Title: 'Food Container',\n    question: \"Are there grease stains or food debris on the container?\",\n    responses: [\n        {text: 'Yes', next: cardboard_foodcontainer_notrecyclable},\n        {text: 'No', next: cardboard_foodcontainer_recyclable}\n    ]\n}\n\n\n\nexport const cardboard_box = {\n    isRecyclable: true,\n    body: \"This can be recycled! Make sure to break down the box before you recycle it.\"\n}\n\nexport const cardboard = {\n    Title:'Cardboard',\n    question: 'What type of cardboard?',\n    responses: [\n        {text: \"Food Container\", next: cardboard_foodcontainer},\n        {text: \"Box\", next: cardboard_box},\n        {text: \"Other\", next: cardboard_box}\n    ]\n}\n\n// Bags\n\nexport const bags_giftbag_worndamaged = {\n    isRecyclable: false,\n    body: \"This cannot usually be recycled, but check with your local recycling provider first to be certain.\"\n}\n\nexport const bags_giftbag_notworndamaged = {\n    isRecyclable: true,\n    body: \"This can be reused! You should use it again before trying to throw it away or recycle it.\"\n}\nexport const bags_grocerybag_paper_foodstains = {\n    isRecyclable: false,\n    body: \"This cannot be recycled, but some paper or cardboard materials can be composted even if there is food debris on them.\"\n}\n\nexport const bags_grocerybag_paper_nofoodstains = {\n    isRecyclable: true,\n    body: \"This can be recycled!\"\n}\n\nexport const bags_grocerybag_paper = {\n    question: \"Does it have any food stains?\",\n    responses: [\n        {text: 'Yes', next: bags_grocerybag_paper_foodstains},\n        {text: 'No', next: bags_grocerybag_paper_nofoodstains}\n    ]\n}\n\nexport const bags_grocerybag_plastic = {\n    isRecyclable: true,\n    body: \"Plastic bags can be reused! Some recycling plants will take plastic bags, but check with your local recycling provider first before throwing it in the bin.\"\n}\n\nexport const bags_grocerybag = {\n    question: \"Is it paper or plastic?\",\n    responses: [\n        {text: 'Paper', next: bags_grocerybag_paper},\n        {text: 'Plastic', next: bags_grocerybag_plastic}\n    ]\n}\n\nexport const bags_giftbag = {\n    question: \"Is it worn or damaged?\",\n    responses: [\n        {text: 'Yes', next: bags_giftbag_worndamaged},\n        {text: 'No', next: bags_giftbag_notworndamaged}\n    ]\n}\n\n\nexport const bags = {\n    responses: [\n        {text: \"Gift Bag\", next: bags_giftbag},\n        {text: \"Grocery Bag\", next: bags_grocerybag}\n    ]\n}\n\nexport const items = {\n    question: 'What are you trying to recycle?',\n    responses: [\n        {text: \"Paper\", next: paper},\n        {text: \"Cardboard\", next: cardboard},\n        {text: \"Bags\", next: bags},\n        {text: \"Containers\", next: containers},\n        {text: \"Cans\", next: cans},\n        {text: \"Electronics\", next: electronics},\n        {text: \"Other\", next: other}\n    ]\n}","import React, {useState} from 'react';\nimport QuestionScreen from './QuestionScreen'\nimport HomeScreen from './Homescreen'\nimport {items} from '../data/sampledata'\n\nconst styles = {\n    root:{\n        background:'#5B2E48',\n        color:'#E2B8A6',\n        width:'100vw',\n        height:'100vh',\n        textAlign:'center',\n        h1:{\n            fontSize:39,\n            padding: '70px 20px 0 20px'\n        },\n        h2:{\n            fontSize: 25,\n            paddingTop: '30px',\n            paddingBottom:'30px',\n            width:'195px',\n            margin: 'auto'\n        }\n    },\n    buttoncontainer:{\n        overflow:'auto',\n        height: '370px'\n    },\n    button: {\n        background:'#519369',\n        color:'#DBF1CB',\n        fontSize: 25,\n        width: '325px',\n        height: '66px',\n        margin:'8px auto auto auto',\n        justifyContent:'center',\n        alignItems:'center',\n        display:'flex',\n        borderRadius: 35,\n    }\n}\n\n// let test = {\n//     Title:\"Let's Get Started!\",\n//     Question: \"What are you trying to recycle?\",\n//     Options: [\n//         {text:'Bottles'},\n//         {text:'Boxes'},\n//         {text:'Paper'},\n//         {text:'Electronics'},\n//         {text:'Other'},\n//         {text:'Tires'},\n//         {text:'Stuff'}\n//     ]\n// }\n\nlet test = {\n    ...items,\n    Title:\"Let's get started!\",\n    Question: \"What are you trying to recycle?\",\n}\n\n\nexport default function Screen(){\n\n    let [ishome, goHome] = useState(true)\n    let [activePage, changePage] = useState(test)\n\n    return(\n        <div>\n        {   ishome \n            ? <div>\n                <HomeScreen goHome={goHome} styles={{...styles, root:{...styles.root, background:'#519369',color:'#DBF1CB',}, button:{...styles.button, background:'#5F3850', color:'#DBF1CB',}}}/>\n            </div> \n            : <div>\n                <QuestionScreen {...activePage} changePage={changePage} goBack={()=>{goHome(true)}} styles={styles} />\n            </div>\n        }\n        </div>\n    )\n}","import React from 'react';\nimport './App.css';\nimport Screen from './components/sample_component'\n\nfunction App() {\n  return (\n    <div>\n      <Screen></Screen>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}